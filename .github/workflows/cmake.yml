name: cmake

on:
  push:
  pull_request:
  schedule:
    - cron: '0 1 * * SUN'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - CC: gcc-13
            CXX: g++-13
            PackageDeps: g++-13
            Qt: qt.qt6.680.gcc_64
            os: ubuntu-24.04
          - CC: clang-18
            CXX: clang++-18
            PackageDeps: clang-18
            Qt: qt.qt6.680.gcc_64
            Repo: llvm-toolchain-$(lsb_release -cs)-18
            os: ubuntu-24.04
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} ${{ matrix.CXX }}
    env:
      WPOS_SRC: ${{ github.workspace }}/wpos
      WPOS_BUILD: ${{ github.workspace }}/../build
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
    steps:
    - name: checkout wpos
      uses: actions/checkout@v4
    - name: Add Repo
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
        sudo apt-add-repository "deb http://apt.llvm.org/$(lsb_release -cs)/ ${{ matrix.Repo }} main"
      if: matrix.Repo != ''
    - name: Install Packages Dependencies
      run: |
        sudo apt --yes update
        sudo apt --yes install libxkbcommon-x11-0 ninja-build cmake libcups2-dev libjpeg-dev libpng-dev zlib1g-dev libcrypt-dev libgdchart-gd2-xpm-dev libgd-dev libsqlite3-dev libodb-sqlite-dev libodb-boost-dev libboost1.83-dev libodb-pgsql-dev libodb-qt-dev libodb-dev libxml2-dev odb ${{ matrix.PackageDeps }}
        sudo wget --verbose https://d13lb3tujbc8s0.cloudfront.net/onlineinstallers/qt-online-installer-linux-x64-4.8.1.run -O /usr/bin/qt-online-installer 
        sudo chmod u+x /usr/bin/qt-online-installer
        cd ${{ github.workspace }}
        sudo mkdir -pv /opt/qt
        sudo qt-online-installer --root /opt/qt --accept-licenses --default-answer --confirm-command install ${{ matrix.Qt }}
      if: matrix.PackageDeps != ''
    - name: Build wPOS 
      run: |
        mkdir -pv ${env:WPOS_BUILD}
        mkdir -pv ${env:WPOS_SRC}/../bin
        mkdir -pv ${env:WPOS_SRC}/../lib
        cmake -DCMAKE_PREFIX_PATH:PATH=/opt/qt/gcc_64 -S ${env:WPOS_SRC} -B ${env:WPOS_BUILD} -G Ninja
        cmake --build ${env:WPOS_BUILD} --target all --parallel
      shell: pwsh
