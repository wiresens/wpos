***********************************
*Database Connexion Names to Check*
***********************************
AuthCoreDBConnection
nTPV_ProductCoreConnection
BslChangeMoneyWidgetConnection
option_check
BslEnterTheMatrixDB
BarCoreConnection

********************
*Entities to Rename*
********************
BslOrderTableWidget -> BslOrderContentWidget
BslOrderTableWidget *getOrderTable() -> content() 
BslOrderHeaderWidget *getOrderHeader(); -> header()

*********************************
Add waiter Photo on the Order header. The function does
nothing presently:
void BslOrderHeaderWidget::showPhoto(bool show_it){}
file: ntpv/ntpvlibwidget/bslorderheaderwidget.cpp
Actually, the functionally is implemented. 
We shall check to see why this functon does nothing

**********************************************
Refactor the parseXmlDescription() of many classes, using
helper functions to reduce the lenght on code. It Actually
more than 300 lines. Which is very bad. The is too much 
code repetition 

*********************************************************
Fix the way paymode is handled. When everver a user click on the button for paymode type, a text or code corresponding to the paymode type should be sent to to slot that handle the paymode.

Presently, for each paymode, there is a specific slot with the name of the paymode, that calls a function(a signal), passing it the hardcoded name of the paymode.
void PayModeWidget::proceccionCivilClickedSlot(){
    sendTicketSignal("proteccion civil");
}

void PayModeWidget::sodexhoClickedSlot(){
    sendTicketSignal("sodexho pass");
}

We should handle this dynamically so that, we have
PayModeWidget::paymodeClicked(const QString& paymode) 
PayModeWidget::payAs(const QString& paymode) 


************************************************
problems while opening device: Permission denied
************************************************
This message is printed to stderr when clicking on 
button abrir caja ( Open Cash Box )

from : void OpenBox::genericSignalSlot(const QString& signal_name)
It tried to open the file /dev/ttyS0 as specified in the
configuration file /etc/ntpv/devices_config.xml.
As with the finger print devices, we should use dbus/udev
to automatically detect whether a cashbox device is connected
or not, displaying or hiding the button as the device comes in 
or goes. The configuration should not be harcoded in the xml file.

************************************************
bslmenubutton.cpp : Redesign
************************************************
Since we are no more using a QMenu widget to implement popup menu
functionality( we replaced it with a QFrame that has the Qt::Popup window flag), we should investigate to see whether the folliwing metthods are still relevant:
	+ setOrientation()
	+ orientation()
	+ closePopUp()

Also, we are allways aligning the popup menu in grid and makes it overlap the area of "upper buttons" when displayed. We made the asumption that the grid will allways have two columns. Therefore, the following methods might not be relevant anymore:
	+ alignInGrid()
The aligment is done automatically in the method  childEvent(). 

Rievize HList and make it
it data member stack allocated objects
QPtrList<T>  *list ===> QPtrList<T>  list;
QPtrMap<T>* dict   ===> QPtrMap<T>   dict 

ntpvlibwidget:
bsldragobjects.cpp: Classes Have been moved 
	*** from QIconView to QListView
	*** from QIconViewItem to QListWidgetItem
	*** QTable to QTableWidget
Only wposbo uses theses classes. Check later if porting was successfull

XmlConfig: releaseDomain vs delDomain
The basicly do the samething, releasing domain, but the name "delDomain" is confusing.
we will rename it releaseDomain in the future and have these two overloads:
bool releaseDomain(const QString& domain, bool recursive=true);
bool releaseDomain (bool recursive=true)

The present situation is:
bool releaseDomain(const QString& domain, bool recursive=true);
bool delDomain (bool recursive=true), which is a bit misleading:
See description in : ntpv/libbslxml/xmlconfig.h

****************************************
CMake configuration:

1. See how to instruct definion on sysmbol HAVE_LIBFREETYPE 
only the the source files that actually make use of it and not
at the entire target level

****************************************
GIt configuration:
Add moc_predefs.h to git ignore as it is automatically
generated by qmake with the following call at compilation
g++ -m64 -pipe -std=c++20 -Wno-deprecated-copy -Wno-narrowing -g -dM -E -o moc_predefs.h /usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/data/dummy.cpp

************************************************
Executables and Libraries versions harmonization

See how to assign either a same version or depending on features

************************************************
Folder and target names harmonization

See how to assign the same name to folders and target for QMake and CMake
build

************************************************
Coding Guidelines:

Include Doug Schmidt CS REAME.md coding guidelines
for future developpers
in CS251/assignment1 there are defined in:
	.travis.sh    : automatically checks lintage, build with either gcc or clang
	.clang-format : inforces webkit coding guidelines
	REAME.md      : Detailled description of rational of the guidelines

Create a template CMake project that enable Gtest that will be used
in the future for begining of any project( kind of scaffolding)
├── bin
│   └── testing
├── .clang-format	// Edit to adapt our needs
├── CMakeLists.txt
├
├── .gitignore
├── include
│   ├── AllocationTracker.h
│   └── SimpleArray.h
├── README.md	// Edit to adapt our needs
├── src
│   ├── AllocationTracker.cpp
│   └── SimpleArray.cpp
├── tests
│   ├── main.cpp
│   ├── moreTests.cpp 
│   └── simpleArrayTest.cpp // Adapt to our own tests
├── .travis.sh 	// Edit to adapt our needs
└── .travis.yml	// Edit to adapt our needs

********************************************************************
Automated Test, Packaging, Deployment(CI/CD) scaffolding:
Create a template CMake project that enable 
	- Gtest 
	- ctest
	- cpack
	- deployemnet
	- ci/cd
That will be used in the future as scaffolding
for begining of any project
For CI/CD thing of .travis.sh .travis.yml in Doug Schmidt assignment files
	.travis.sh  	: automatically checks lintage, build with either gcc or clang
	.travis.yml 	: kubernetes/docker config file for CI/CD
	.clang-format 	: inforces webkit coding guidelines


********************************
wposwidget depending on dbusprinter generated com.wiresens.dbusprinter.xml

Find ways to remove this dependency

Change Workspace/projets into Workspace/projetcs, projets -> projetcs

