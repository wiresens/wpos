# File generated by kdevelop's qmake manager.
# -------------------------------------------
# Subdirectory relative to the main directory of the project: ./dbusprinter
# Destination is an application: dbusprinter

QT              -= gui
QT              += core dbus sql

CONFIG          += debug -Wall warn_on qt
#CONFIG         += release warn_off qt
TARGET          = dbusprinter
TEMPLATE        = app

QMAKE_CXXFLAGS  += -std=c++20 -Os -s
QMAKE_CXXFLAGS  += -Wno-deprecated-copy  -Wno-narrowing

INSTALLS        += \
    etc \
    usr \
    target

target.path     = /usr/bin
usr.files       += usr/*
usr.path        = /usr/share/dcopprinter
etc.files       += etc/*
etc.path        = /etc/ntpv

TARGETDEPS += \
    ../libqutexr/libqutexr.so \
    ../wposcore/libwposcore.so \
    ../libbslxml/libbslxml.so

LIBS += \
    -lqutexr \
    -lwposcore \
    -lbslxml \
    -lcups

QMAKE_LIBDIR = \
    ../libqutexr \
    ../wposcore \
    ../libbslxml

MOC_DIR      = moc
OBJECTS_DIR  = obj

INCLUDEPATH += \
    ../libqutexr \
    ../wposcore \
    ../libbslxml \
    /usr/include/libxml2 \
    ..

dbus_adaptors.target    = com.wiresens.dbusprinter.xml
dbus_adaptors.files     = com.wiresens.dbusprinter.xml
dbus_adaptors.depens    = qdbuscpp2xml
dbus_adaptors.commands  = @true
# To be generated by qdbuscpp2xml compiler
# The generated xml will serve as input for qdbusxml2cpp to generate *_adaptor.{h,cpp}
# qdbusxml2cpp is automatically invoqued by qmake
#DBUS_ADAPTORS       += com.wiresens.dbusprinter.xml
DBUS_ADAPTORS       += dbus_adaptors

# Input files for qdbuscpp2xml to generate the above xml
# qdbuscpp2xml invocation is done bellow by adding custom compiler
# to qmake invoqued by qmake QMAKE_EXTRA_COMPILERS
DBUS_ADAPTOR_FILES  += dbusprinter.h

# QtDBUS qdbuscpp2xml compiler flags for generating xml specs from DBUS_ADAPTOR_FILES.
DBUS_FLAGS          = -M #export all public slots
DBUS_OUT_FLAGS      = -o # output option

# Newer versions of QtCreator do builds in a separate directory. As a
# result, we need to append the source directory to DBUS files.
#
for(file, DBUS_ADAPTOR_FILES) {
  DBUS_PWD_FILES += $$PWD/$${file}
}

qdbuscpp2xml.name       = qdbuscpp2xml ${QMAKE_FILE_IN}
qdbuscpp2xml.input      = DBUS_PWD_FILES
qdbuscpp2xml.output     = com.wiresens.${QMAKE_FILE_BASE}.xml
qdbuscpp2xml.commands   = qdbuscpp2xml $$DBUS_FLAGS ${QMAKE_FILE_IN} $$DBUS_OUT_FLAGS com.wiresens.${QMAKE_FILE_BASE}.xml
qdbuscpp2xml.CONFIG     = no_link
#qdbuscpp2xml.depends    = $$DBUS_ADAPTOR_FILES # Was making DBUS_ADAPTOR_FILES a dependency target
                                                # With error: No rule to make target 'dbusprinter.h', needed by 'com.wiresens.dbusprinter.xml'
qdbuscpp2xml.clean      = com.wiresens.${QMAKE_FILE_BASE}.xml
QMAKE_EXTRA_COMPILERS   += qdbuscpp2xml
QMAKE_EXTRA_TARGETS     += qdbuscpp2xml dbus_adaptors

HEADERS += \
    dbusprinter.h \
    dbusprinterinterface.h \
    main.h \
    printer.h \
    printermanager.h \
    printersamsungsrp350.h \
    printerticket.h \
    xmlrpcprinter.h

SOURCES += \
    dbusprinter.cpp \
    main.cpp \
    printer.cpp \
    printermanager.cpp \
    printersamsungsrp350.cpp \
    printerticket.cpp \
    xmlrpcprinter.cpp \

DISTFILES += \
    etc/dtds/dcopprinter_config.dtd \
    etc/dcopprinter_config.xml \
    usr/replace.pl \
    AUTHORS \
    COPYING



#include(../platform.pri)
#include(../destination.pri)

#DESTDIR     = $$PWD/../bin/$$DESTINATION_PATH
#OBJECTS_DIR = $$PWD/build/$$DESTINATION_PATH/.obj
#MOC_DIR     = $$PWD/build/$$DESTINATION_PATH/.moc
#message(wpostest project dir : $${PWD})
#message(wpostest output dir : $${DESTDIR})
